#Data Preparation:
import pandas as pd
import io
import torch
import numpy as np

!wget https://raw.githubusercontent.com/laflame99/GreedyGameAnswers/main/Q3_Sikka%20data.csv

df = pd.read_csv(open('Q3_Sikka data.csv','r'))
df["Date"] = pd.to_datetime(df["Date"],format='%Y-%m-%d')  
oct_data = df[df['Date']<'2022-11-01']
nov_data = df[df['Date'] >='2022-11-01']


#Feature Selection:
features = ['DAU', 'Installs', 'Uninstalls', 'Signups']
X = oct_data[features]
y = oct_data['Referrals']


#Data Normalization:
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X = scaler.fit_transform(X)


#Model Training:
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X, y)


#Model Evaluation:
n = int(X.shape[0]*.9)
train_X = X[:n]
test_X = X[n:]
train_y = y[:n]
test_y = y[n:]
predictions = regressor.predict(test_X)
mae = np.mean(np.abs(predictions - test_y))
print("Mean Absolute Error:", mae)


#Model Evaluation:
forecast_X = nov_data[features]
forecast_X = scaler.fit_transform(forecast_X)
forecast_y = regressor.predict(forecast_X)

for i, referral in enumerate(forecast_y):
    print("Day {}: {}".format(i+1, referral))
